plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.google.protobuf" version "0.9.2"
}

group = 'ru.leti'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/resources/proto'
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/Terross/wise-task-library")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
            //ghp_YNPs7OlWm BjsONygIn9yMScphUl3kX3NBNFP
            password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            //"ghp_YNPs7O lWmBjsONygIn9yMS cphUl3kX3NBNFP"
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    annotationProcessor 'no.entur.mapstruct.spi:protobuf-spi-impl:1.42'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //grpc dependencies
    implementation 'io.github.lognet:grpc-spring-boot-starter:5.0.0'
    implementation 'io.grpc:grpc-protobuf:1.53.0'
    implementation 'io.grpc:grpc-stub:1.53.0'
    implementation 'com.google.protobuf:protobuf-java-util:3.21.7'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'ru.leti:wise-task-library:1.0.3'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.7"
    }
    clean {
        delete protobuf.generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.53.0"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
